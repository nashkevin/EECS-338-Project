[ FP Final Design Document ]
    Joel Kalos, Kevin Nash
    December 13, 2016
    
File Descriptions:
    bubble_sort.c
        Bubble sort algorithm in a single thread or parallel
    insertion_sort.c
        Insertion sort algorithm in a single thread or parallel
    merge_sort.c
        Mergesort algorithm in a single thread or parallel
    quicksort.c
        Quicksort algorithm in a single thread or parallel
    selection_sort.c
        Selection sort algorithm in a single thread or parallel
    sorting_algorithms.h
        Header file to define all sorting algorithm signatures
    sort_timer.c
        Runner file with main method. Outputs recorded times to CSV.

    The only major data structures we use are the randomly-populated integer
    arrays that our algorithms are sorting.

    Each of the five sorting algorithms that we use has a separate C file.
    Within each of these files there are, at a minimum, two sorting methods,
    one of which does not take advantage of any parallel processing. Each
    sorts its input array in-memory and returns the time taken to do so.

    sorting_algorithms.h gives sort_timer.c the necessary links to run the
    sorting methods found in the individual sorting files. sort_timer.c writes
    separate CSV files with three columns: N, Regular Sort, and Parallel Sort.

    We plotted these values in a way that compares the differences between each
    sorting algorithm implementation. These plots are included as images.

    Sample output is included for each algorithm in the following CSV files
        bubble_sort.csv
        insertion_sort.csv
        merge_sort.csv
        quicksort.csv
        selection_sort.csv

    The plots we generated draw from the above output data.
